1. Donggyu Kim (437008)

2. 
[donggyukim@shell studio3]$ ./studio3 3 + 3
The value calculated is 3
[donggyukim@shell studio3]$ echo $?
0
[donggyukim@shell studio3]$ ./studio3 3/
caught exception for badly formed command line argument.
[donggyukim@shell studio3]$ echo $?
3

3. 
[donggyukim@shell studio3]$ gdb studio3
GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/warehouse/donggyukim/cse428s_fall23/studio3/studio3...done.
(gdb) 

4. 
(gdb) break parse_and_compute 
Breakpoint 1 at 0x401b6d: file studio3.cpp, line 93.

5. 
(gdb) run + 1 + 2 + 3 4
Starting program: /home/warehouse/donggyukim/cse428s_fall23/studio3/studio3 + 1 + 2 + 3 4
warning: File "/project/engineering/compilers/gcc-8.3.0/lib64/libstdc++.so.6.0.25-gdb.py" auto-loading has been declined by your `auto-load safe-path' set to "$debugdir:$datadir/auto-load:/usr/bin/mono-gdb.py".
To enable execution of this file add
        add-auto-load-safe-path /project/engineering/compilers/gcc-8.3.0/lib64/libstdc++.so.6.0.25-gdb.py
line to your configuration file "/home/warehouse/donggyukim/.gdbinit".
To completely disable this security protection add
        set auto-load safe-path /
line to your configuration file "/home/warehouse/donggyukim/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
        info "(gdb)Auto-loading safe path"

Breakpoint 1, parse_and_compute (current_index=@0x7fffffffd474: 1, last_index=7, argv=0x7fffffffd588) at studio3.cpp:93
93        if (current_index > last_index) {        
(gdb) continue
Continuing.

Breakpoint 1, parse_and_compute (current_index=@0x7fffffffd474: 2, last_index=7, argv=0x7fffffffd588) at studio3.cpp:93
93        if (current_index > last_index) {  

6. 
(gdb) where
#0  parse_and_compute (current_index=@0x7fffffffd474: 2, last_index=7, argv=0x7fffffffd588) at studio3.cpp:93
#1  0x0000000000401c2c in parse_and_compute (current_index=@0x7fffffffd474: 2, last_index=7, argv=0x7fffffffd588) at studio3.cpp:103
#2  0x00000000004019d0 in main (argc=8, argv=0x7fffffffd588) at studio3.cpp:46

7. I am having little trouble understanding this question - instructions say :
 the position (index) of the current command line argument that is being parsed, and (2) the (C-style) string corresponding to that command line argument. 
 I am assuming that I need to modify current_index variable some way, but I am not sure what I am supposed to do. 